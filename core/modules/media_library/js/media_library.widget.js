/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(($, Drupal, Sortable) => {
  Drupal.behaviors.MediaLibraryWidgetSortable = {
    attach(context) {
      const selection = context.querySelectorAll('.js-media-library-selection');
      selection.forEach(widget => {
        Sortable.create(widget, {
          draggable: '.js-media-library-item',
          handle: '.js-media-library-item-preview',
          onEnd: () => {
            $(widget).children().each((index, child) => {
              $(child).find('.js-media-library-item-weight').val(index);
            });
          }
        });
      });
    }

  };
  Drupal.behaviors.MediaLibraryWidgetToggleWeight = {
    attach(context) {
      const strings = {
        show: Drupal.t('Show media item weights'),
        hide: Drupal.t('Hide media item weights')
      };
      $(once('media-library-toggle', '.js-media-library-widget-toggle-weight', context)).on('click', e => {
        e.preventDefault();
        $(e.currentTarget).toggleClass('active').text($(e.currentTarget).hasClass('active') ? strings.hide : strings.show).closest('.js-media-library-widget').find('.js-media-library-item-weight').parent().toggle();
      }).text(strings.show);
      $(once('media-library-toggle', '.js-media-library-item-weight', context)).parent().hide();
    }

  };
  Drupal.behaviors.MediaLibraryWidgetDisableButton = {
    attach(context) {
      once('media-library-disable', '.js-media-library-open-button[data-disabled-focus="true"]', context).forEach(button => {
        $(button).focus();
        setTimeout(() => {
          $(button).attr('disabled', 'disabled');
        }, 50);
      });
    }

  };
})(jQuery, Drupal, Sortable);